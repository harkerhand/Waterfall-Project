name,item_id,text
优缺点,1,
优点,2,优点；可强迫开发人员采用规范的方法（如结构化技术）；严格地规定了每个阶段必须提交的文档；要求每个阶段交出的所有产品都必须经过质量保证小组的仔细验证。
缺点,3,缺点：瀑布模型是由文档驱动，在可运行的软件产品交付给用户之前，用户只能通过文档来了解产品是什么样的。瀑布模型几乎完全依赖于书面的规格说明，很可能导致最终开发出的软件产品不能真正满足用户的需要。也不适合需求模糊的系统。
应用,4,
应用的实例,5,1.NASA的阿波罗计划：在上世纪60年代，美国国家航空航天局（NASA）成功实施了阿波罗计划，将人类送上月球。这个项目采用了严格的瀑布模型，从需求分析、设计、实施到测试和维护，每个阶段都有明确的任务和目标，最终取得了成功。2.奔驰汽车的产品开发：汽车制造商奔驰在新产品的开发过程中也采用了瀑布模型。他们会先进行市场调研和需求分析，然后设计车型、生产原型，最后进行测试和推出市场。这种严谨的流程保证了产品质量和市场竞争力。3.联合国的信息系统建设：联合国在建设自己的信息系统时，也采用了瀑布模型。他们会先进行详细的需求分析，然后制定设计方案，逐步实施和测试，最终上线运行。这种方法保证了信息系统的稳定性和安全性。4.IBM CICS：CICS 是 IBM 的一款事务处理服务器，广泛用于金融和其他行业的企业中。由于其复杂性和对高可用性、高可靠性的要求，IBM 在开发 CICS 的过程中采用了瀑布模型，以确保每一个阶段（包括需求分析、设计、实现、测试和维护）都能被严格控制和文档化。
应用的过程,6,"1. 需求分析（Requirements Analysis）
活动：与客户和利益相关者进行沟通，收集和分析需求。
确定系统的功能需求和非功能需求（如性能、安全性等）。
编写需求规格说明书（SRS），详细描述系统的预期功能和约束条件。
输出：
需求规格说明书（SRS）
需求确认文档
2. 系统设计（System Design）

活动：
根据需求规格说明书，设计系统架构和模块划分。
设计数据库结构、用户界面和系统接口。
编写设计文档，描述系统的技术细节和设计决策。
输出：
系统设计文档（SDD）
数据库设计文档
用户界面原型
3. 实现（Implementation）

活动：
根据设计文档进行编码，开发系统的各个模块。
进行单元测试，确保每个模块的功能正确。
记录代码和开发过程中的重要信息。
输出：
源代码
单元测试报告
4. 测试（Testing）

活动：
进行集成测试，确保各个模块能够正确协同工作。
进行系统测试，验证系统是否满足需求规格说明书中的要求。
进行用户验收测试（UAT），让客户确认系统的功能和性能。
输出：
测试计划
测试用例和测试结果
用户验收测试报告
5. 部署（Deployment）

活动：
将系统部署到生产环境，进行必要的配置和优化。
提供用户培训，帮助用户熟悉系统的使用。
发布用户手册和技术文档。
输出：
部署文档
用户手册
培训材料
6. 维护（Maintenance）

活动：
监控系统的运行状态，收集用户反馈。
修复发现的缺陷和问题，进行系统更新和升级。
根据用户需求的变化，进行功能扩展和改进。
输出：
维护记录
更新和升级文档"
概念,7,瀑布模型，又称为预测型生命周期或完全计划驱动型生命周期，是软件开发过程中的一个经典模型。它要求在项目生命周期的早期阶段就确定项目范围以及交付该范围所需的时间和成本。在瀑布模型中，项目启动时，团队会专注于定义产品和项目的总体范围，随后制定产品交付计划，并通过各个阶段执行这一计划。项目范围的变更应当被仔细管理，任何新增范围都需要重新计划和正式确认。
相关理论,8,
变体,9,
V模型,10,"RAD (Rap Application Development,快速应用开发) 模型是软件开发过程中的一个重要模型，由于其模型构图形似字母V，所以又称软件开发的V模型。它通过开发和测试同时进行的方式来缩短开发周期，提高开发效率。"
相对理论,11,
敏捷开发,12,敏捷开发以用户的需求进化为核心，采用迭代、循序渐进的方法进行软件开发。在敏捷开发中，软件项目在构建初期被切分成多个子项目，各个子项目的成果都经过测试，具备可视、可集成和可运行使用的特征。换言之，就是把一个大项目分为多个相互联系，但也可独立运行的小项目，并分别完成，在此过程中软件一直处于可使用状态。
螺旋模型,13,螺旋模型是一种演化软件开发过程模型，它兼顾了快速原型的迭代的特征以及瀑布模型的系统化与严格监控。螺旋模型最大的特点在于引入了其他模型不具备的风险分析，使软件在无法排除重大风险时有机会停止，以减小损失。同时，在每个迭代阶段构建原型是螺旋模型用以减小风险的途径。螺旋模型更适合大型的昂贵的系统级的软件应用。
背景与发展历史,14,
起源,15,1960年代：瀑布模型的概念最早在1960年代提出，主要用于大型软件项目的开发。其基础思想是将软件开发过程分为多个阶段，每个阶段都有明确的目标和输出。Winston W. Royce：在1970年，Winston W. Royce发表了一篇论文，描述了软件开发的阶段性过程，虽然他并没有明确提出“瀑布模型”这一术语，但他的工作为后来的瀑布模型奠定了基础。
演变,16,"1.迭代和增量模型的出现
1980年代：为了克服瀑布模型的局限性，迭代和增量模型开始出现。这些模型允许在开发过程中进行多次迭代，逐步完善系统。
增量开发：将系统分为多个小的增量，每个增量都可以独立开发和测试，用户可以在每个增量完成后进行反馈。
2. 敏捷开发的兴起
1990年代末：敏捷开发方法（如Scrum和Extreme Programming）开始流行，强调灵活性、快速迭代和用户反馈。敏捷方法与瀑布模型形成鲜明对比，适应快速变化的需求。
敏捷宣言：2001年，敏捷宣言的发布标志着敏捷开发的正式确立，强调个体和交互、工作的软件、客户合作和响应变化的重要性。
3. 现代软件开发方法
DevOps和持续集成：近年来，DevOps和持续集成/持续交付（CI/CD）等方法的兴起，进一步推动了软件开发的灵活性和效率。这些方法强调开发和运维的协作，自动化测试和部署流程。
混合模型：许多组织开始采用混合模型，将瀑布模型与敏捷方法结合，以适应不同项目的需求。"
应用原则,17,"需求明确
阶段划分
计划管理
风险控制
质量保证
用户参与
变更管理
维护支持
适用性评估"
